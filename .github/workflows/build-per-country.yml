name: miEPG (ES+GB diario, simple)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'   # 00:00 UTC (02:00 CEST, 01:00 CET)

permissions:
  contents: write  # Permite escribir/commitear archivos

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        country: [es, gb]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Preparar herramientas
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl wget gzip sed

      - name: Mostrar fuentes y canales (${{ matrix.country }})
        run: |
          echo "== countries/${{ matrix.country }}/epgs.txt =="
          cat countries/${{ matrix.country }}/epgs.txt || true
          echo
          echo "== countries/${{ matrix.country }}/canales.txt =="
          cat countries/${{ matrix.country }}/canales.txt || true

      - name: Construir EPG (${{ matrix.country }})
        env:
          # Si un país no produce programmes, no falles todo el job
          ALLOW_EMPTY: "1"
        run: |
          chmod +x .github/workflows/EPG_script.sh
          OUT="countries/${{ matrix.country }}/EPG.xml"
          .github/workflows/EPG_script.sh \
            "countries/${{ matrix.country }}/epgs.txt" \
            "countries/${{ matrix.country }}/canales.txt" \
            "$OUT"

      - name: Comprobar resultado (conteos ${{ matrix.country }})
        run: |
          OUT="countries/${{ matrix.country }}/EPG.xml"
          if [ ! -f "$OUT" ]; then
            echo "No se generó $OUT (posible falta de fuentes)"; exit 0
          fi
          echo "Primeras 30 líneas de $OUT:"
          head -n 30 "$OUT" || true
          PRG=$(grep -c "<programme" "$OUT" || echo 0)
          echo "Programmes totales en ${{ matrix.country }}: $PRG"

      - name: Commit y push EPG (${{ matrix.country }})
        run: |
          OUT="countries/${{ matrix.country }}/EPG.xml"
          CHANNELS_LIST="countries/${{ matrix.country }}/channels.txt"
          
          [ -f "$OUT" ] || { echo "Sin archivo $OUT; nada que commitear"; exit 0; }
          PRG=$(grep -c "<programme" "$OUT" || echo 0)
          
          # Configurar git usuario
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions[bot]"
          
          # Función para hacer push con reintentos en caso de conflictos
          safe_push() {
            local max_attempts=3
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Intento $attempt de $max_attempts para push..."
              
              # Hacer pull antes del push para sincronizar
              git pull --rebase origin main || {
                echo "Error en git pull, reintentando..."
                attempt=$((attempt + 1))
                sleep 2
                continue
              }
              
              # Intentar push
              if git push origin main; then
                echo "Push exitoso en intento $attempt"
                return 0
              else
                echo "Push falló en intento $attempt"
                attempt=$((attempt + 1))
                sleep 2
              fi
            done
            
            echo "Error: Push falló después de $max_attempts intentos"
            return 1
          }
          
          # Siempre commitear channels.txt aunque EPG esté vacío (para debug)
          if [ -f "$CHANNELS_LIST" ]; then
            echo "Commiteando lista de canales disponibles: $CHANNELS_LIST"
            git add "$CHANNELS_LIST"
            if git commit -m "update: channels list for ${{ matrix.country }} - $(date -u +'%Y-%m-%dT%H:%M:%SZ')"; then
              safe_push || echo "Error pushing channels.txt"
            else
              echo "Sin cambios en channels.txt"
            fi
          fi
          
          [ "$PRG" -gt 0 ] || { echo "Sin programmes en $OUT; no commiteo EPG"; exit 0; }

          git add "$OUT"
          if git commit -m "update: EPG ${{ matrix.country }} - $(date -u +'%Y-%m-%dT%H:%M:%SZ') - $PRG programmes"; then
            safe_push || { echo "Error crítico en push EPG"; exit 1; }
          else
            echo "Nada que commitear en EPG"
          fi
