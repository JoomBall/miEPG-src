name: miEPG per-country

on:
  workflow_dispatch:
  schedule:
    - cron: '5 6,12,18 * * *'  # varias veces al día (UTC)

concurrency:
  group: miEPG-per-country
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        country: [es, gb]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gzip php-cli

      - name: Compute COUNTRY_UP (ES/GB)
        run: |
          echo "COUNTRY_UP=$(echo '${{ matrix.country }}' | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Mostrar listas del país (si existen)
        run: |
          set -e
          echo "== País: ${{ matrix.country }} =="
          if [ -f "countries/${{ matrix.country }}/epgs.txt" ]; then
            echo "-- epgs.txt"; sed -n '1,80p' countries/${{ matrix.country }}/epgs.txt
          else
            echo "NO existe countries/${{ matrix.country }}/epgs.txt"
          fi
          if [ -f "countries/${{ matrix.country }}/canales.txt" ]; then
            echo "-- canales.txt"; sed -n '1,80p' countries/${{ matrix.country }}/canales.txt
          else
            echo "NO existe countries/${{ matrix.country }}/canales.txt"
          fi

      - name: Debug fuentes (count programmes)
        run: |
          if [ -f "countries/${{ matrix.country }}/epgs.txt" ]; then
            while IFS= read -r u; do
              [ -z "$u" ] && continue
              echo "=== Probando: $u"
              curl -A "Mozilla/5.0" -fsSL "$u" | tee /tmp/test.xml | head -n 5 || true
              echo "Programmes: $(grep -c '<programme' /tmp/test.xml || true)"
            done < countries/${{ matrix.country }}/epgs.txt
          fi

      - name: Build EPG (país)
        env:
          EPGS_FILE: ${{ github.workspace }}/countries/${{ matrix.country }}/epgs.txt
          CHANNELS_FILE: ${{ github.workspace }}/countries/${{ matrix.country }}/canales.txt
          OUTPUT: ${{ github.workspace }}/miEPG_${{ env.COUNTRY_UP }}.xml
          COUNTRY: ${{ matrix.country }}
          ALLOW_EMPTY: "1"
        run: |
          chmod +x .github/workflows/EPG_script.sh
          bash -x .github/workflows/EPG_script.sh || true
          if [ -s "miEPG_${{ env.COUNTRY_UP }}.xml" ]; then
            echo "OK: generado miEPG_${{ env.COUNTRY_UP }}.xml"
          else
            echo "INFO: no se generó XML para ${{ matrix.country }} (se permite vacío)."
          fi

      - name: Subir artefacto del país
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: xml-${{ matrix.country }}
          path: miEPG_${{ env.COUNTRY_UP }}.xml
          if-no-files-found: ignore

      - name: Publish to public mirror (si hay XML)
        if: always()
        env:
          GH_USER: JoomBall
          GH_REPO: miEPG-pub
          PUSH_TOKEN: ${{ secrets.PUSH_TOKEN }}
          OUTFILE: miEPG_${{ env.COUNTRY_UP }}.xml
          SUBDIR: ${{ matrix.country }}     # es / gb
        run: |
          set -e
          echo "OUTFILE=$OUTFILE"
          if [ ! -s "$OUTFILE" ]; then
            echo "No hay OUTFILE con contenido; salto publicación."
            exit 0
          fi
          if [ -z "$PUSH_TOKEN" ]; then
            echo "Sin PUSH_TOKEN; salto publicación."
            exit 0
          fi

          git config --global user.name "github-actions"
          git config --global user.email "actions@users.noreply.github.com"

          echo "Clonando destino: https://github.com/${GH_USER}/${GH_REPO}.git"
          git clone --depth 1 https://x-access-token:${PUSH_TOKEN}@github.com/${GH_USER}/${GH_REPO}.git pub
          echo "Árbol inicial de 'pub/':"
          ls -la pub || true

          mkdir -p "pub/${SUBDIR}"
          cp -f "$OUTFILE" "pub/${SUBDIR}/"
          echo "Archivo copiado a pub/${SUBDIR}/$(basename "$OUTFILE")"
          ls -la "pub/${SUBDIR}" || true

          cd pub
          git add -A
          echo "git status tras add:"
          git status

          # Si no hay cambios (archivo idéntico), no pasa nada
          if git diff --cached --quiet; then
            echo "No hay cambios que commitear (probablemente mismo contenido)."
            exit 0
          fi

          git commit -m "update ${SUBDIR} $(date -u +%Y-%m-%dT%H:%M:%SZ)"
          # Ajusta 'main' si tu rama por defecto fuera otra
          git push origin HEAD:main
